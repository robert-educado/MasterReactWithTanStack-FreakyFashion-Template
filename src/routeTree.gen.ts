/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as NotfoundImport } from './routes/notfound'
import { Route as IndexImport } from './routes/index'
import { Route as EnSearchImport } from './routes/en.search'
import { Route as EnNewsImport } from './routes/en.news'
import { Route as EnCheckoutImport } from './routes/en.checkout'
import { Route as EnAboutImport } from './routes/en.about'
import { Route as EnProductsLoremImport } from './routes/en.products.lorem'
import { Route as EnCategoryClothingImport } from './routes/en.category.clothing'
import { Route as EnCategoryAccessoriesImport } from './routes/en.category.accessories'

// Create/Update Routes

const NotfoundRoute = NotfoundImport.update({
  id: '/notfound',
  path: '/notfound',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const EnSearchRoute = EnSearchImport.update({
  id: '/en/search',
  path: '/en/search',
  getParentRoute: () => rootRoute,
} as any)

const EnNewsRoute = EnNewsImport.update({
  id: '/en/news',
  path: '/en/news',
  getParentRoute: () => rootRoute,
} as any)

const EnCheckoutRoute = EnCheckoutImport.update({
  id: '/en/checkout',
  path: '/en/checkout',
  getParentRoute: () => rootRoute,
} as any)

const EnAboutRoute = EnAboutImport.update({
  id: '/en/about',
  path: '/en/about',
  getParentRoute: () => rootRoute,
} as any)

const EnProductsLoremRoute = EnProductsLoremImport.update({
  id: '/en/products/lorem',
  path: '/en/products/lorem',
  getParentRoute: () => rootRoute,
} as any)

const EnCategoryClothingRoute = EnCategoryClothingImport.update({
  id: '/en/category/clothing',
  path: '/en/category/clothing',
  getParentRoute: () => rootRoute,
} as any)

const EnCategoryAccessoriesRoute = EnCategoryAccessoriesImport.update({
  id: '/en/category/accessories',
  path: '/en/category/accessories',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/notfound': {
      id: '/notfound'
      path: '/notfound'
      fullPath: '/notfound'
      preLoaderRoute: typeof NotfoundImport
      parentRoute: typeof rootRoute
    }
    '/en/about': {
      id: '/en/about'
      path: '/en/about'
      fullPath: '/en/about'
      preLoaderRoute: typeof EnAboutImport
      parentRoute: typeof rootRoute
    }
    '/en/checkout': {
      id: '/en/checkout'
      path: '/en/checkout'
      fullPath: '/en/checkout'
      preLoaderRoute: typeof EnCheckoutImport
      parentRoute: typeof rootRoute
    }
    '/en/news': {
      id: '/en/news'
      path: '/en/news'
      fullPath: '/en/news'
      preLoaderRoute: typeof EnNewsImport
      parentRoute: typeof rootRoute
    }
    '/en/search': {
      id: '/en/search'
      path: '/en/search'
      fullPath: '/en/search'
      preLoaderRoute: typeof EnSearchImport
      parentRoute: typeof rootRoute
    }
    '/en/category/accessories': {
      id: '/en/category/accessories'
      path: '/en/category/accessories'
      fullPath: '/en/category/accessories'
      preLoaderRoute: typeof EnCategoryAccessoriesImport
      parentRoute: typeof rootRoute
    }
    '/en/category/clothing': {
      id: '/en/category/clothing'
      path: '/en/category/clothing'
      fullPath: '/en/category/clothing'
      preLoaderRoute: typeof EnCategoryClothingImport
      parentRoute: typeof rootRoute
    }
    '/en/products/lorem': {
      id: '/en/products/lorem'
      path: '/en/products/lorem'
      fullPath: '/en/products/lorem'
      preLoaderRoute: typeof EnProductsLoremImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/notfound': typeof NotfoundRoute
  '/en/about': typeof EnAboutRoute
  '/en/checkout': typeof EnCheckoutRoute
  '/en/news': typeof EnNewsRoute
  '/en/search': typeof EnSearchRoute
  '/en/category/accessories': typeof EnCategoryAccessoriesRoute
  '/en/category/clothing': typeof EnCategoryClothingRoute
  '/en/products/lorem': typeof EnProductsLoremRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/notfound': typeof NotfoundRoute
  '/en/about': typeof EnAboutRoute
  '/en/checkout': typeof EnCheckoutRoute
  '/en/news': typeof EnNewsRoute
  '/en/search': typeof EnSearchRoute
  '/en/category/accessories': typeof EnCategoryAccessoriesRoute
  '/en/category/clothing': typeof EnCategoryClothingRoute
  '/en/products/lorem': typeof EnProductsLoremRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/notfound': typeof NotfoundRoute
  '/en/about': typeof EnAboutRoute
  '/en/checkout': typeof EnCheckoutRoute
  '/en/news': typeof EnNewsRoute
  '/en/search': typeof EnSearchRoute
  '/en/category/accessories': typeof EnCategoryAccessoriesRoute
  '/en/category/clothing': typeof EnCategoryClothingRoute
  '/en/products/lorem': typeof EnProductsLoremRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/notfound'
    | '/en/about'
    | '/en/checkout'
    | '/en/news'
    | '/en/search'
    | '/en/category/accessories'
    | '/en/category/clothing'
    | '/en/products/lorem'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/notfound'
    | '/en/about'
    | '/en/checkout'
    | '/en/news'
    | '/en/search'
    | '/en/category/accessories'
    | '/en/category/clothing'
    | '/en/products/lorem'
  id:
    | '__root__'
    | '/'
    | '/notfound'
    | '/en/about'
    | '/en/checkout'
    | '/en/news'
    | '/en/search'
    | '/en/category/accessories'
    | '/en/category/clothing'
    | '/en/products/lorem'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  NotfoundRoute: typeof NotfoundRoute
  EnAboutRoute: typeof EnAboutRoute
  EnCheckoutRoute: typeof EnCheckoutRoute
  EnNewsRoute: typeof EnNewsRoute
  EnSearchRoute: typeof EnSearchRoute
  EnCategoryAccessoriesRoute: typeof EnCategoryAccessoriesRoute
  EnCategoryClothingRoute: typeof EnCategoryClothingRoute
  EnProductsLoremRoute: typeof EnProductsLoremRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  NotfoundRoute: NotfoundRoute,
  EnAboutRoute: EnAboutRoute,
  EnCheckoutRoute: EnCheckoutRoute,
  EnNewsRoute: EnNewsRoute,
  EnSearchRoute: EnSearchRoute,
  EnCategoryAccessoriesRoute: EnCategoryAccessoriesRoute,
  EnCategoryClothingRoute: EnCategoryClothingRoute,
  EnProductsLoremRoute: EnProductsLoremRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/notfound",
        "/en/about",
        "/en/checkout",
        "/en/news",
        "/en/search",
        "/en/category/accessories",
        "/en/category/clothing",
        "/en/products/lorem"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/notfound": {
      "filePath": "notfound.tsx"
    },
    "/en/about": {
      "filePath": "en.about.tsx"
    },
    "/en/checkout": {
      "filePath": "en.checkout.tsx"
    },
    "/en/news": {
      "filePath": "en.news.tsx"
    },
    "/en/search": {
      "filePath": "en.search.tsx"
    },
    "/en/category/accessories": {
      "filePath": "en.category.accessories.tsx"
    },
    "/en/category/clothing": {
      "filePath": "en.category.clothing.tsx"
    },
    "/en/products/lorem": {
      "filePath": "en.products.lorem.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
